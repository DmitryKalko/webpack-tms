Webpack - сборщик модулей для JavaScript.
Он позволяет создавать приложения по модульной структуре,
 собирает все модули в один бандл и минифицирует его (т е сжимает).

- инициализируем новый проект
npm init  везде жмем просто энтер - все это можно будет вписать и потом если нужно

у нас появляется файл package.json

- теперь ставим сам вэбпак и его расширение что бы можно было управлять через терминал
npm i -D webpack webpack-cli

- создаем папку src
- внутри создаем входные файлы index.js  index.html
- в index.html создаем корневой блок, куда потом будем понтироваться все приложение

- создаем файл webpack.config.js
- пишем там 

- установим лоадеры
вэбпак по умолчанию читает файлы только js и json
по этому для написания стилей, использования изображений и дт - для всего нужен отдельный лоадеры
npm i -D style-loader css-loader sass-loader sass file-loader

- устанавливаем плагины - это как лоадеры на максималках
они мощьнее потому что могут работать после того как вэбпак уже собрал бандл
npm i -D html-webpack-plugin clean-webpack-plugin
первый берет итоговый js файл (т е бандл и вставляет его в html входной файл)
второй будет чистить ненужные бандлы, которые будут появляться в итоге реакции на строку с filename
там вэбпак реагирует на изменений js файлов и делает бандл

- установим вэбпак дэв сервер
что бы вэбпак сам автоматически пересобирался и обновлял страницу в браузере
npm i -D webpack-dev-server

- настроим лоадеры стилей (там)

- настройка дэв сервера

- package.json пропишем
"build": "webpack",
"start": "webpack serve --mode development --open --config webpack.config.js",

- запустим в рантайм и попробуем собрать билд

- на этом настройка вэбпака без реакта закончена - теперь мы его добавим

// с РЕАКТОМ

- идем на сайт babel находим вэбпак и устанавливаем
npm install --save-dev babel-loader @babel/core
он нужен что бы ES6+ работал в старых браузерах и jsx преобразовывался в js

- добавляем правило
- устанавливаем пресет
npm install @babel/preset-env --save-dev

- еще нужен пресет для jsx
npm i --save-dev @babel/preset-react

- устанавливаем полифил
npm i --save-dev @babel/polyfill
добавляем его в точку входа приложения и меняем js на jsx

- устанавливаем реакт
npm i --save react react-dom


